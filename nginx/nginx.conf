user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    sendfile        on;
    keepalive_timeout  65;
    
    # =====================================================
    # Admin subdomain => admin (React Container, port 80)
    # =====================================================
    server {
        listen 80;
        server_name admin.philofoody.com;

        location / {
            proxy_pass http://admin:80;
            # "admin" => Docker Compose içindeki service_name (veya container_name)
        }
    }

    # =====================================================
    # Client subdomain => client (React Container, port 80)
    # =====================================================
    server {
        listen 80;
        server_name menu.philofoody.com;

        location / {
            proxy_pass http://client:80;
        }
    }

    # =====================================================
    # Landing subdomain => landing (Next.js Container, port 3000)
    # =====================================================
    server {
        listen 80;
        server_name landing.philofoody.com;

        location / {
            proxy_pass http://landing:3000;
        }
    }

    # =====================================================
    # Backend subdomain => backend (Spring Boot Container, port 8080)
    # =====================================================
    server {
        listen 80;
        server_name api.philofoody.com;

        location / {
            proxy_pass http://backend:8080;
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Eğer WebSocket veya Socket.io endpointiniz varsa
        location /socket/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://backend:8080;
        }
    }
}
