name: Deploy Foody Projects

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1) Kodu Çek (Checkout)
    - name: Checkout code
      uses: actions/checkout@v2

    # 2) Docker CLI Kullanabilmek İçin (Varsayılan Ubuntu-latest'te Docker kurulu gelir)
    #    Eğer ekstra kurulum gerekirse Setup Docker action'lar eklenebilir.

    # 3) (Opsiyonel) Docker Registry'ye login
    #    Eğer imajları Docker Hub veya GHCR gibi bir registry'ye push edecekseniz:
    - name: Log in to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: docker.io  # veya docker.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # 4) Docker Compose Build
    - name: Docker Compose Build
      run: |
        docker-compose -f docker-compose.yaml build

    # 5) (Opsiyonel) Docker Compose Push
    #    Eğer imajları registry'ye push edecekseniz:
    - name: Docker Compose Push
      run: |
        docker-compose -f docker-compose.yaml push

    # 6) Uzak Sunucuya SSH ile Bağlanarak Deploy
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: 22
        script: |
          cd /app  # Uzak sunucudaki proje klasörü
          # Repo code orada ise git pull yapabilirsiniz veya bu code'u rsync/scp ile gönderebilirsiniz
          
          # Eğer code ve docker-compose.yaml sunucuda hazır ise:
          docker-compose pull       # Kayıtlı imajları registry'den çek
          docker-compose up -d --build

    # 7) (Opsiyonel) Nginx Restart veya diğer komutlar
    - name: Restart Nginx
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: 22
        script: |
          sudo systemctl restart nginx
