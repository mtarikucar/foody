name: Deploy Foody Projects

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Kodu Çek
      - name: Checkout code
        uses: actions/checkout@v2

      # 2) Olası Eski Docker/Containerd Paketlerini Kaldır (Opsiyonel)
      - name: Remove old Docker packages
        run: |
          sudo apt-get update -y
          sudo apt-get remove -y containerd docker docker.io runc || true
          sudo apt-get autoremove -y || true

      # 3) Docker ve Docker Compose Kur
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com | sudo sh
      - name: Install Docker Compose
        run: |
          sudo apt-get update -y
          sudo apt-get install -y docker-compose

      # 4) Docker Hub’a Login
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 5) Her servis için Docker Build & Push
      - name: Build & Push Images
        run: |
          # admin
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/admin:latest ./admin
          docker push ${{ secrets.REGISTRY_USERNAME }}/admin:latest

          # client
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/client:latest ./client
          docker push ${{ secrets.REGISTRY_USERNAME }}/client:latest

          # landing
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/landing:latest ./landing
          docker push ${{ secrets.REGISTRY_USERNAME }}/landing:latest

          # backend
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/backend:latest ./server/mono
          docker push ${{ secrets.REGISTRY_USERNAME }}/backend:latest

          # nginx
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/nginx:latest ./nginx
          docker push ${{ secrets.REGISTRY_USERNAME }}/nginx:latest

      - name: Check File Content
        run: |
          cat docker-compose.yaml
          cat nginx/nginx.conf

      # 6) Sunucuya docker-compose.yaml (ve gerekiyorsa diğer conf dosyaları) kopyala
      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: |
            ./docker-compose.yaml
            ./nginx/nginx.conf
          target: '/app/menu_0'
          debug: true
    

      # 7) Sunucuda Deploy
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /app/menu_0
            # Private repository kullanılıyorsa sunucuda da login yapmak gerekebilir
            # docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}" docker.io

            # İmajları çek
            docker-compose pull

            # Container'ları ayağa kaldır
            docker-compose up -d --remove-orphans

      # 8) (Opsiyonel) Nginx restart (sistemde yüklü "host" Nginx varsa)
      - name: Restart Nginx
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            sudo systemctl restart nginx || true
